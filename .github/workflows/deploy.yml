name: Deploy slides

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      # # Build slides.md
      # - name: Build slides.md
      #   run: |
      #     mkdir -p output/intro
      #     pwd
      #     npx slidev build slides.md --base "/${{github.event.repository.name}}/intro/" --out "output/intro"

      # Build slides in ics/
      - name: Build slides in ics/
        run: |
          mkdir -p output/arch
          cp ./ics/arch.md ./
          npx slidev build arch.md --base "/${{github.event.repository.name}}/arch/" --out "output/arch"
        # for file in ./ics/*.md; do
        #   name=$(basename "$file" .md)
        #   mkdir -p output/$name
        #   pwd
        #   echo $file
        #   npx slidev build $file --base "/${{github.event.repository.name}}/arch/" --out output/arch
        #   ls -R output/$name
        # done

      - name: Verify output structure
        run: ls -R output

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - uses: actions/upload-pages-artifact@v3
        with:
          path: output # Ensure entire 'output' directory is uploaded

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
